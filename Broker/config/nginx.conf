user nginx;

worker_processes auto;
# error_log /etc/nginx/log/error.log warn;
# pid /etc/nginx/run/nginx.pid

events {
    worker_connections 1024;
}

stream {
    log_format mqtt '$remote_addr [$time_local] '
                      '$protocol $status '
                      '$bytes_sent $bytes_received '
                      '$session_time';

    upstream mqtt_broker {
        server mosquitto:8883;
    }

    server {
        listen 443 ssl;
        proxy_pass mqtt_broker;

        # SSL Config
        ssl_certificate  /etc/nginx/ssl/broker.crt;
        ssl_certificate_key /etc/nginx/ssl/broker.key;
        ssl_trusted_certificate /etc/nginx/ssl/ca.crt;

        # SSL Security Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        # ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:20m;
        ssl_session_tickets off;
        ssl_session_timeout 15m;


        # Harden SSL
        # ssl_stapling on;
        # ssl_stapling_verify on;
        # resolver 8.8.8.8 8.8.4.4 valid=300s; # Use Google's DNS for OCSP
        # resolver_timeout 5s;

        # Limit buffer overflow and protect server resources
        # proxy_buffer_size 4k;
        # proxy_buffers 4 4k;
        # proxy_busy_buffers_size 8k;

        # Restrict access to specific IP ranges (optional)
        # allow 192.168.1.0/24; # Replace with trusted network
        # allow 203.0.113.0/24; # Replace with trusted IP ranges
        # deny all; # Deny everything else

        # Logging
        access_log /var/log/nginx/mqtt_access.log mqtt;
        error_log /var/log/nginx/mqtt_error.log warn;
    }
}
